<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="ehcache.xsd" 
	updateCheck="false" monitoring="autodetect" dynamicConfig="true">

    <!-- 指定数据存储位置 -->
    <diskStore path="java.io.tmpdir/JsySys/ehcache"/>

	<!-- 默认的管理策略 -->
    <defaultCache maxElementsInMemory="2000"
            eternal="false"
            timeToIdleSeconds="86400" 
            timeToLiveSeconds="86400"
			overflowToDisk="true"
            diskPersistent="false"
            diskSpoolBufferSizeMB="50" />
    
    <!--七牛缓存配置  -->
    <cache name="qnLinkCache"
           maxElementsInMemory="2000"
           eternal="false"
           timeToIdleSeconds="3200" 
           timeToLiveSeconds="3200"
           overflowToDisk="true"
           diskPersistent="false"
           diskSpoolBufferSizeMB="50" />

    <!--用户按钮权限 一个小时-->
    <cache name="userPermission"
           maxElementsInMemory="2000"
           eternal="false"
           timeToIdleSeconds="3600"
           timeToLiveSeconds="3600"
           overflowToDisk="true"
           diskPersistent="false"
           diskSpoolBufferSizeMB="50" />

    <!-- 配置说明
                   必须配置：
         name：Cache的名称，必须是唯一的(ehcache会把这个cache放到HashMap里)
         maxElementsInMemory：在内存中缓存的element的最大数目
         maxElementsOnDisk：在磁盘上缓存的element的最大数目，默认值为0，表示不限制
         eternal：设定缓存的elements是否永远不过期。如果为true，则缓存的数据始终有效，如果为false那么还要根据timeToIdleSeconds，timeToLiveSeconds判断
         overflowToDisk：如果内存中数据超过内存限制，是否要缓存到磁盘上
		  可选的配置：
		 timeToIdleSeconds：对象空闲时间，指对象在多长时间没有被访问就会失效。只对eternal为false的有效。
		 timeToLiveSeconds：对象存活时间，指对象从创建到失效所需要的时间。只对eternal为false的有效。
         diskPersistent：是否在磁盘上持久化。指重启jvm后，数据是否有效。默认为false
         diskExpiryThreadIntervalSeconds：使用过期算法清除磁盘中失效对象的间隔,默认为120秒
         diskSpoolBufferSizeMB：DiskStore使用的磁盘大小，默认值30MB。每个cache使用各自的DiskStore
         memoryStoreEvictionPolicy：如果内存中数据超过内存限制，向磁盘缓存时的策略。默认值LRU，可选FIFO、LFU
		  缓存的3 种清空策略：
		 FIFO：first in first out (先进先出)
		 LFU：Less Frequently Used (最少使用).意思是一直以来最少被使用的。缓存的元素有一个hit 属性，hit 值最小的将会被清出缓存
		 LRU：Least Recently Used(最近最少使用). (ehcache 默认值).缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存
     -->
    
</ehcache>
